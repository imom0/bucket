extends base

block title
  = block.super
  | 详情
  = object.pk
block content
  h2= object.name
  p= object.created_by.username
  p= object.description
  p= object.created_at|date

  div(ng-controller="CollectionController")
    div(ng-repeat="req in requests").ui.fluid.form.segment
      h3.ui.header
        请求
        - verbatim
          {{ req.url.protocol }}//{{ req.url.host }}{{ req.url.pathname }}{{ req.url.search }}
      div.field
        label
          地址:
        input(ng-model="req.url.href", maxlength=200, name="base_url", type="text")
      div.field
        label
          HTTP方法:
        div.grouped.inline.fields(ng-repeat="method in methods")
          div.field
            div.ui.radio.checkbox
              - verbatim
                <input type="radio" id="{{ idForMethod(method, req) }}" name="req-{{ req.pk }}-method" ng-model="req.method" ng-value="method">
                <label for="{{ idForMethod(method, req) }}">{{ method }}</label>
      div.field
        label
          HTTP头:
        div(ng-repeat="param in headers").three.fields
            div.field
              input(ng-model="param.name", type="text")
            div.field
              input(ng-model="param.value", type="text")
            div.field
              div.ui.red.icon.button(ng-click="remove(headers, $index)")
                i.icon.remove
        div.ui.blue.icon.button(ng-click="add(headers)")
          i.icon.add
      div.field(ng-show="['DELETE', 'PUT', 'POST'].indexOf(req.method) >= 0")
        label
          | Body:
        textarea(name="body")
    div.ui.divider
    div.center.aligned.column
      div.right.floated.green.ui.labeled.icon.button(ng-click="updateRequests()")
        i.save.icon
        | 保存
block javascript
  script
    angular.module('myApp', ['ngCookies']).controller('CollectionController',
      ['$scope', '$http', '$cookies', function($scope, $http, $cookies) {
        $http.defaults.headers.post['X-CSRFToken'] = $cookies.csrftoken;
        $scope.headers = [{'name': '', 'value': ''}];
        $scope.methods = ['GET', 'POST', 'PUT'];
        $scope.requests = [];

        $scope.add = function(list) {
          list.push({'name': '', 'value': ''});
        }

        $scope.remove = function(list, index) {
          list.splice(index, 1);
        }

        $scope.idForMethod = function(method, req) {
          return 'method-' + method + '-' + req.pk;
        }

        var fetchRequests = function() {
          $http({method: 'GET', url: "{% url 'collection_requests' object.id %}"})
          .success(function(data, status, headers, config) {
            if (data.meta.status == 'OK') {
              for (var i=0; i<data.data.length; i++) {
                var req = data.data[i];
                $scope.requests.push({
                  'pk': req.pk,
                  'url': new URL(req.url),
                  'method': req.method,
                  'headers': req.headers,
                  'body': req.body
                })
              }
            }
          })
          .error(function(data, status, headers, config) {
            alert('fail');
          })
        }

        $scope.updateRequests = function() {
          $http({
            method: 'POST',
            url: "{% url 'collection_requests' object.id %}",
            headers: {'Content-Type': 'application/json'},
            data: JSON.stringify({requests: $scope.requests})
          })
          .success(function(data, status, headers, config) {
            alert('update success');
          })
          .error(function(data, status, headers, config) {
            alert('update fail');
          })
        }
        fetchRequests();
      }
    ]);
